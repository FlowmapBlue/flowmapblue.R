[{"path":"https://flowmapblue.github.io/flowmapblue.R/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright 2020 Ilya Boyandin Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://flowmapblue.github.io/flowmapblue.R/articles/flowmapblue.html","id":"example-1-visualizing-basic-flows","dir":"Articles","previous_headings":"","what":"Example 1: Visualizing Basic Flows","title":"Quick Start with Flowmap.blue R widget","text":"Next, load example location flow data: structure data.frames: Note: using data, need shape structure column names exactly sample datasets. Now, create basic flow map: View map:  Save map HTML file:","code":"locations <- data(ch_locations) flows <- data(ch_flows) str(locations) 'data.frame':   26 obs. of  4 variables:  $ id  : chr  \"ZH\" \"LU\" \"UR\" \"SZ\" ...  $ name: chr  \"Zürich\" \"Luzern\" \"Uri\" \"Schwyz\" ...  $ lat : num  47.4 47.1 46.8 47.1 46.9 ...  $ lon : num  8.65 8.11 8.63 8.76 8.24 ... str(flows) 'data.frame':   676 obs. of  3 variables:  $ origin: chr  \"ZH\" \"ZH\" \"ZH\" \"ZH\" ...  $ dest  : chr  \"ZH\" \"BE\" \"LU\" \"UR\" ...  $ count : int  66855 1673 1017 84 1704 70 94 250 1246 173 ... flowmap <- flowmapblue(   locations = locations,   flows = flows,   mapboxAccessToken = Sys.getenv('MAPBOX_API_TOKEN'),   clustering = TRUE,   darkMode = TRUE,   animation = FALSE ) flowmap # Save the map to an HTML file htmlwidgets::saveWidget(flowmap, file = \"flowmap.html\")"},{"path":"https://flowmapblue.github.io/flowmapblue.R/articles/flowmapblue.html","id":"example-2-flows-with-date-time","dir":"Articles","previous_headings":"","what":"Example 2: Flows with Date-Time","title":"Quick Start with Flowmap.blue R widget","text":"can also visualize flows date-time information. ’s example time data included:","code":"# Generate fake datetime for flows flows$time <- seq(from = as.POSIXct(\"2020-01-01\"), to = as.POSIXct(\"2020-01-05\"), length.out = nrow(flows))  flowmap <- flowmapblue(   locations = locations,   flows = flows,   mapboxAccessToken = Sys.getenv('MAPBOX_API_TOKEN'),   clustering = TRUE,   darkMode = TRUE,   animation = FALSE )  # View the map flowmap"},{"path":"https://flowmapblue.github.io/flowmapblue.R/articles/flowmapblue.html","id":"example-3-flows-with-date-only","dir":"Articles","previous_headings":"","what":"Example 3: Flows with Date Only","title":"Quick Start with Flowmap.blue R widget","text":"flow data includes dates (without times), can also visualize :","code":"# Generate fake dates for flows flows$time <- seq(from = as.Date(\"2020-01-01\"), to = as.Date(\"2020-06-01\"), length.out = nrow(flows))  flowmap <- flowmapblue(   locations = locations,   flows = flows,   mapboxAccessToken = Sys.getenv('MAPBOX_API_TOKEN'),   clustering = TRUE,   darkMode = TRUE,   animation = FALSE )  # View the map flowmap"},{"path":"https://flowmapblue.github.io/flowmapblue.R/articles/flowmapblue.html","id":"integration-with-shiny","dir":"Articles","previous_headings":"","what":"Integration with Shiny","title":"Quick Start with Flowmap.blue R widget","text":"want integrate flowmapblue Shiny application, can use following functions: provides simple yet powerful way visualize flows interactive web application. examples, able quickly get started creating customizing flow maps using flowmapblue package R. advanced options features, refer package documentation explore different settings needed.","code":"# UI flowmapblueOutput(\"flowmap\", width = \"100%\", height = \"600px\")  # Server output$flowmap <- renderFlowmapblue({   flowmapblue(     locations = ch_locations,     flows = ch_flows,     mapboxAccessToken = Sys.getenv('MAPBOX_API_TOKEN'),     clustering = TRUE,     darkMode = TRUE,     animation = FALSE   ) })"},{"path":"https://flowmapblue.github.io/flowmapblue.R/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Ilya Boyandin. Author, copyright holder. Egor Kotov. Maintainer.","code":""},{"path":"https://flowmapblue.github.io/flowmapblue.R/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Boyandin (2024). Flowmap.blue widget R. doi:10.32614/CRAN.package.flowmapblue, https://github.com/FlowmapBlue/flowmapblue.R.","code":"@Manual{flowmapblue_r,   title = {Flowmap.blue widget for R},   author = {Ilya Boyandin},   year = {2024},   url = {https://github.com/FlowmapBlue/flowmapblue.R},   doi = {10.32614/CRAN.package.flowmapblue}, }"},{"path":"https://flowmapblue.github.io/flowmapblue.R/index.html","id":"flowmapblue-r-widget-","dir":"","previous_headings":"","what":"Flow Map Rendering","title":"Flow Map Rendering","text":"WORK PROGRESS Flowmap.blue widget R. Create interactive flow maps using FlowmapBlue TypeScript library, free tool representing aggregated numbers movements geographic locations flow maps. used visualize urban mobility, commuting behavior, bus, subway air travels, bicycle sharing, human bird migration, refugee flows, freight transportation, trade, supply chains, scientific collaboration, epidemiological historical data many topics. package allows either create standalone flow maps form ‘htmlwidgets’ save ‘HTML’ files, integrate flow maps ‘Shiny’ applications. might also consider using pure R flowmapping library based ggplot2: https://github.com/JohMast/flowmapper  alternative, may also consider using R populate spreadsheet publishing Flowmap.blue described excellent blog post.","code":""},{"path":"https://flowmapblue.github.io/flowmapblue.R/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Flow Map Rendering","text":"Install CRAN: install development version GitHub need install remotes don’t yet:","code":"install.packages(\"flowmapblue\") if (!require(\"remotes\")) install.packages(\"remotes\")  remotes::install_github(\"FlowmapBlue/flowmapblue.R\",   force = TRUE, dependencies = TRUE)"},{"path":"https://flowmapblue.github.io/flowmapblue.R/index.html","id":"quick-example","dir":"","previous_headings":"","what":"Quick example","title":"Flow Map Rendering","text":"Setup Mapbox access token. can obtain free token signing Mapbox. nice intro blog post Paula Moraga. examples time date flows data, well integration Shiny, see Quick Start vignette documentation package functions https://flowmapblue.github.io/flowmapblue.R/.","code":"Sys.setenv(MAPBOX_API_TOKEN = \"YOUR_MAPBOX_ACCESS_TOKEN\") library(flowmapblue)  # load locations and flows for Switzerland data(ch_locations) data(ch_flows)  flowmap <- flowmapblue(  ch_locations,  ch_flows,  mapboxAccessToken = Sys.getenv('MAPBOX_API_TOKEN'),  clustering = TRUE,  darkMode = TRUE,  animation = FALSE )  # view the map flowmap"},{"path":"https://flowmapblue.github.io/flowmapblue.R/reference/ch_flows.html","id":null,"dir":"Reference","previous_headings":"","what":"Swiss Flows Dataset — ch_flows","title":"Swiss Flows Dataset — ch_flows","text":"dataset containing flow data various locations Switzerland. data represents flow counts origin destination locations, identified unique codes.","code":""},{"path":"https://flowmapblue.github.io/flowmapblue.R/reference/ch_flows.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Swiss Flows Dataset — ch_flows","text":"","code":"ch_flows"},{"path":[]},{"path":"https://flowmapblue.github.io/flowmapblue.R/reference/ch_flows.html","id":"ch-flows","dir":"Reference","previous_headings":"","what":"ch_flows","title":"Swiss Flows Dataset — ch_flows","text":"data frame 676 rows 3 columns: origin character vector representing origin location identifier (must match id ch_locations dataset). dest character vector representing destination location identifier (must match id ch_locations dataset). count integer vector representing flow count origin destination locations.","code":""},{"path":"https://flowmapblue.github.io/flowmapblue.R/reference/ch_locations.html","id":null,"dir":"Reference","previous_headings":"","what":"Swiss Locations Dataset — ch_locations","title":"Swiss Locations Dataset — ch_locations","text":"dataset containing geographic information 26 locations Switzerland. data includes unique identifiers, names, geographic coordinates (latitude longitude) location.","code":""},{"path":"https://flowmapblue.github.io/flowmapblue.R/reference/ch_locations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Swiss Locations Dataset — ch_locations","text":"","code":"ch_locations"},{"path":[]},{"path":"https://flowmapblue.github.io/flowmapblue.R/reference/ch_locations.html","id":"ch-locations","dir":"Reference","previous_headings":"","what":"ch_locations","title":"Swiss Locations Dataset — ch_locations","text":"data frame 26 rows 4 columns: id character vector representing unique identifier Swiss location (e.g., \"JU\", \"LU\"). name character vector representing name location (e.g., \"Jura\", \"Luzern\"). lat numeric vector representing latitude location WGS84 (EPSG: 4326) coordinate reference system. lon numeric vector representing longitude location WGS84 (EPSG: 4326) coordinate reference system.","code":""},{"path":"https://flowmapblue.github.io/flowmapblue.R/reference/flowmapblue-shiny.html","id":null,"dir":"Reference","previous_headings":"","what":"Shiny bindings for flowmapblue — flowmapblue-shiny","title":"Shiny bindings for flowmapblue — flowmapblue-shiny","text":"Output render functions using flowmapblue within Shiny applications interactive Rmd documents.","code":""},{"path":"https://flowmapblue.github.io/flowmapblue.R/reference/flowmapblue-shiny.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shiny bindings for flowmapblue — flowmapblue-shiny","text":"","code":"flowmapblueOutput(outputId, width = \"100%\", height = \"400px\")  renderFlowmapblue(expr, env = parent.frame(), quoted = FALSE)"},{"path":"https://flowmapblue.github.io/flowmapblue.R/reference/flowmapblue-shiny.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Shiny bindings for flowmapblue — flowmapblue-shiny","text":"outputId output variable read . width, height Must valid CSS unit (like '100%', '400px', 'auto') number, coerced string 'px' appended. expr expression generates flowmapblue widget. env environment evaluate expr. quoted expr quoted expression (quote())? useful want save expression variable.","code":""},{"path":"https://flowmapblue.github.io/flowmapblue.R/reference/flowmapblue-shiny.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Shiny bindings for flowmapblue — flowmapblue-shiny","text":"flowmapblueOutput Returns shiny.tag.list object can included Shiny UI display flowmapblue widget. renderFlowmapblue Returns shiny.render.function used generate flowmapblue widget server side Shiny application.","code":""},{"path":[]},{"path":"https://flowmapblue.github.io/flowmapblue.R/reference/flowmapblue.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an interactive flow map — flowmapblue","title":"Create an interactive flow map — flowmapblue","text":"Creates interactive flow map visualizing flows various locations outputs HTML widget. function utilizes FlowmapBlue library create maps customizable options clustering, animation, dark mode. widget can rendered R Markdown, Shiny, viewed browser. can also saved html file htmlwidgets:saveWidget(). See examples details.","code":""},{"path":"https://flowmapblue.github.io/flowmapblue.R/reference/flowmapblue.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an interactive flow map — flowmapblue","text":"","code":"flowmapblue(   locations,   flows,   mapboxAccessToken = NULL,   clustering = TRUE,   animation = FALSE,   darkMode = FALSE )"},{"path":"https://flowmapblue.github.io/flowmapblue.R/reference/flowmapblue.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an interactive flow map — flowmapblue","text":"locations data.frame containing location data. data.frame following columns: id character vector representing unique identifier location (e.g., \"JU\", \"LU\"). name (Optional) character vector representing name location (e.g., \"Jura\", \"Luzern\"). lat numeric vector representing latitude location WGS84 (EPSG: 4326) coordinate reference system. lon numeric vector representing longitude location WGS84 (EPSG: 4326) coordinate reference system. flows data.frame containing flow data locations. data.frame following columns: origin character vector representing origin location identifier (must match id locations). dest character vector representing destination location identifier (must match id locations). count integer vector representing flow count origin destination locations. time (Optional) vector POSIXct Date objects representing date date time flow. mapboxAccessToken character string representing Mapbox access token. required render map using Mapbox tiles. can obtain free token https://account.mapbox.com/. clustering logical value indicating whether enable clustering locations map. Defaults TRUE. animation logical value indicating whether enable animation flows map. Defaults FALSE. darkMode logical value indicating whether enable dark mode map. Defaults FALSE.","code":""},{"path":"https://flowmapblue.github.io/flowmapblue.R/reference/flowmapblue.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an interactive flow map — flowmapblue","text":"HTML widget class flowmapblue htmlwidget can rendered R Markdown, Shiny, viewed browser. can also saved html file htmlwidgets:saveWidget(). See examples details.","code":""},{"path":"https://flowmapblue.github.io/flowmapblue.R/reference/flowmapblue.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an interactive flow map — flowmapblue","text":"","code":"if (FALSE) { # \\dontrun{ # example 1, normal flows # set your Mapbox access token Sys.setenv(MAPBOX_API_TOKEN = \"YOUR_MAPBOX_ACCESS_TOKEN\")  # load locations and flows for Switzerland locations <- data(ch_locations) flows <- data(ch_flows)  flowmap <- flowmapblue(  locations,  flows,  mapboxAccessToken = Sys.getenv('MAPBOX_API_TOKEN'),  clustering = TRUE,  darkMode = TRUE,  animation = FALSE )  # view the map flowmap  # or save it as an HTML file htmlwidgets::saveWidget(flowmap, file = \"flowmap.html\")  # example 2, flows with date in time column # set your Mapbox access token Sys.setenv(MAPBOX_API_TOKEN = \"YOUR_MAPBOX_ACCESS_TOKEN\")  # load locations and flows for Switzerland data(ch_locations) data(ch_flows)  # generate fake datetime flows$time <- seq(from =as.POSIXct(\"2020-01-01\"),   to = as.POSIXct(\"2020-01-05\"), length.out = nrow(flows))  flowmap <- flowmapblue(  ch_locations,  ch_flows,  mapboxAccessToken = Sys.getenv('MAPBOX_API_TOKEN'),  clustering = TRUE,  darkMode = TRUE,  animation = FALSE )  # view the map flowmap  # example 3, flows with date in time column # set your Mapbox access token Sys.setenv(MAPBOX_API_TOKEN = \"YOUR_MAPBOX_ACCESS_TOKEN\")  # load locations and flows for Switzerland data(ch_locations) data(ch_flows) # generate fake dates flows$time <- seq(from = as.Date(\"2020-01-01\"),   to = as.Date(\"2020-06-01\"), length.out = nrow(flows))  flowmap <- flowmapblue(  ch_locations,  ch_flows,  mapboxAccessToken = Sys.getenv('MAPBOX_API_TOKEN'),  clustering = TRUE,  darkMode = TRUE,  animation = FALSE )  # view the map flowmap } # }"},{"path":"https://flowmapblue.github.io/flowmapblue.R/news/index.html","id":"flowmapblue-002","dir":"Changelog","previous_headings":"","what":"flowmapblue 0.0.2","title":"flowmapblue 0.0.2","text":"CRAN release: 2024-09-05 Fixed DESCRIPTION Improved documentation flowmapblueOutput renderFlowmapblue Fixed missing \\value tags documentation","code":""},{"path":"https://flowmapblue.github.io/flowmapblue.R/news/index.html","id":"flowmapblue-001","dir":"Changelog","previous_headings":"","what":"flowmapblue 0.0.1","title":"flowmapblue 0.0.1","text":"Initial CRAN submission.","code":""}]
